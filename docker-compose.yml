services:
  qdrant:
    image: qdrant/qdrant:latest
    restart: always
    container_name: qdrant
    ports:
      - 6333:6333
      - 6334:6334
    expose:
      - 6333
      - 6334
      - 6335
    configs:
      - source: qdrant_config
        target: /qdrant/config/production.yaml
    volumes:
      - ./qdrant_data:/qdrant/storage
    networks:
      - layservicesnetwork

  redis:
    image: redis:alpine
    container_name: redis
    restart: unless-stopped
    tty: true
    volumes:
      - ./infra/redis/redis.conf:/usr/local/etc/redis/redis.conf 
    networks:
      - layservicesnetwork
    mem_limit: 4g
    expose:
      - 6379

  fastapi:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: fastapi
    restart: unless-stopped
    tty: true
    ports:
      - 8000:8000
    volumes:
      - .:/app
    networks:
      - layservicesnetwork
    depends_on:
      - qdrant
      - redis

  fastmcp:
    container_name: fastmcp
    restart: unless-stopped
    build:
      context: .
      dockerfile: Dockerfile.mcp
    tty: true
    ports:
      - 8001:8001
      - 6274:6274
      - 6277:6277
    networks:
      - layservicesnetwork
    depends_on:
      - qdrant
      - redis

  db:
    image: postgres:16-alpine
    container_name: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=SOCfusion
      - POSTGRES_PASSWORD=SOCfusion123.
      - POSTGRES_DB=SOCfusion
    networks:
      - layservicesnetwork

  prefect-server:
    image: prefecthq/prefect:3-latest
    container_name: prefect-server
    environment:
      PREFECT_HOME: /data
      PREFECT_API_URL: http://0.0.0.0:4200/api
    volumes:
      - prefect-data:/root/.prefect
      - .:/app
    ports:
      - 4200:4200
    command: bash -c "cd /app && ls -la && cat prefect.yaml && prefect server database upgrade -y && sleep 5 && prefect server start --host 0.0.0.0 && sleep 15 && prefect deploy --all && tail -f /dev/null"    
    networks:
      - layservicesnetwork

  prefect-worker:
    build:
      context: .
      dockerfile: Dockerfile.worker 
    restart: unless-stopped
    environment:
      - PREFECT_API_URL=http://prefect-server:4200/api
    command: ["uv", "run", "--only-group", "worker","prefect", "worker", "start", "--pool", "default-agent-pool", "--type", "process"]
    depends_on:
      - prefect-server
    networks:
      - layservicesnetwork
  
  prefect-alarms-worker:
    build:
      context: .
      dockerfile: Dockerfile.worker 
    restart: unless-stopped
    environment:
      - PREFECT_API_URL=http://prefect-server:4200/api
    command: ["uv", "run", "--only-group", "worker","prefect", "worker", "start", "--pool", "alarms-worker", "--type", "process"]
    depends_on:
      - prefect-server
    networks:
      - layservicesnetwork

configs:
  qdrant_config:
    content: |
      log_level: INFO
volumes:
  postgres_data:
  prefect-data:
  qdrant_data:
    driver: local
networks:
  layservicesnetwork:
    driver: bridge
